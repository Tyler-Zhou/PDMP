<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:PDMP.Client.Core.Converters"
    xmlns:local="clr-namespace:PDMP.Client.Core">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/PDMP.Client.Core;component/Themes/Resources/Default.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle
                            Margin="0"
                            SnapsToDevicePixels="true"
                            Stroke="Black"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{Binding Path=(local:ControlHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Expander}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="19" />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="1">
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform x:Name="arrowAngle" Angle="0" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Path
                                        x:Name="arrow"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                        SnapsToDevicePixels="false"
                                        Stroke="{TemplateBinding Foreground}"
                                        StrokeThickness="2" />
                                </Grid>
                                <ContentPresenter
                                    Margin="4,0,0,0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>

                        <local:ControlMask
                            Background="{Binding Path=(local:ControlHelper.FocusedBrush), RelativeSource={RelativeSource AncestorType=Expander}}"
                            CornerRadius="{Binding Path=(local:ControlHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Expander}}"
                            IsActive="{TemplateBinding IsPressed}"
                            MaskOpacity="{Binding Path=(local:ControlHelper.MaskOpacity), RelativeSource={RelativeSource AncestorType=Expander}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrowAngle"
                                            Storyboard.TargetProperty="Angle"
                                            To="180"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrowAngle"
                                            Storyboard.TargetProperty="Angle"
                                            To="0"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{Binding Path=(local:ControlHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Expander}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="19" />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="1">
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform x:Name="arrowAngle" Angle="180" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Path
                                        x:Name="arrow"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                        SnapsToDevicePixels="false"
                                        Stroke="{TemplateBinding Foreground}"
                                        StrokeThickness="2" />
                                </Grid>
                                <ContentPresenter
                                    Margin="4,0,0,0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>

                        <local:ControlMask
                            Background="{Binding Path=(local:ControlHelper.FocusedBrush), RelativeSource={RelativeSource AncestorType=Expander}}"
                            CornerRadius="{Binding Path=(local:ControlHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Expander}}"
                            IsActive="{TemplateBinding IsPressed}"
                            MaskOpacity="{Binding Path=(local:ControlHelper.MaskOpacity), RelativeSource={RelativeSource AncestorType=Expander}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrowAngle"
                                            Storyboard.TargetProperty="Angle"
                                            To="0"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrowAngle"
                                            Storyboard.TargetProperty="Angle"
                                            To="180"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{Binding Path=(local:ControlHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Expander}}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="19" />
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="1">
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform x:Name="arrowAngle" Angle="90" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Path
                                        x:Name="arrow"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                        SnapsToDevicePixels="false"
                                        Stroke="{TemplateBinding Foreground}"
                                        StrokeThickness="2" />
                                </Grid>
                                <ContentPresenter
                                    Margin="0,4,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <local:ControlMask
                            Background="{Binding Path=(local:ControlHelper.FocusedBrush), RelativeSource={RelativeSource AncestorType=Expander}}"
                            CornerRadius="{Binding Path=(local:ControlHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Expander}}"
                            IsActive="{TemplateBinding IsPressed}"
                            MaskOpacity="{Binding Path=(local:ControlHelper.MaskOpacity), RelativeSource={RelativeSource AncestorType=Expander}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrowAngle"
                                            Storyboard.TargetProperty="Angle"
                                            To="-90"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrowAngle"
                                            Storyboard.TargetProperty="Angle"
                                            To="90"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{Binding Path=(local:ControlHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Expander}}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="19" />
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="1">
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform x:Name="arrowAngle" Angle="-90" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Path
                                        x:Name="arrow"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                        SnapsToDevicePixels="false"
                                        Stroke="{TemplateBinding Foreground}"
                                        StrokeThickness="2" />
                                </Grid>
                                <ContentPresenter
                                    Margin="0,4,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <local:ControlMask
                            Background="{Binding Path=(local:ControlHelper.FocusedBrush), RelativeSource={RelativeSource AncestorType=Expander}}"
                            CornerRadius="{Binding Path=(local:ControlHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Expander}}"
                            IsActive="{TemplateBinding IsPressed}"
                            MaskOpacity="{Binding Path=(local:ControlHelper.MaskOpacity), RelativeSource={RelativeSource AncestorType=Expander}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrowAngle"
                                            Storyboard.TargetProperty="Angle"
                                            To="90"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrowAngle"
                                            Storyboard.TargetProperty="Angle"
                                            To="-90"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExtExpander" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{DynamicResource DefaultBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="local:ControlHelper.FocusedBrush" Value="{DynamicResource Mask}" />
        <Setter Property="local:ControlHelper.CornerRadius" Value="{DynamicResource AllContainerCornerRadius}" />
        <Setter Property="local:HeaderHelper.Background" Value="{DynamicResource DefaultBackground}" />
        <Setter Property="local:HeaderHelper.Foreground" Value="{DynamicResource DefaultForeground}" />
        <Setter Property="local:HeaderHelper.FontSize" Value="14" />
        <Setter Property="local:HeaderHelper.FontWeight" Value="Normal" />
        <Setter Property="local:HeaderHelper.HorizontalAlignment" Value="Left" />
        <Setter Property="local:HeaderHelper.VerticalAlignment" Value="Top" />
        <Setter Property="local:HeaderHelper.Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(local:ControlHelper.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <DockPanel>
                            <ToggleButton
                                x:Name="HeaderSite"
                                MinWidth="0"
                                MinHeight="0"
                                Padding="{Binding Path=(local:HeaderHelper.Padding), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                HorizontalContentAlignment="{Binding Path=(local:HeaderHelper.HorizontalAlignment), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                VerticalContentAlignment="{Binding Path=(local:HeaderHelper.VerticalAlignment), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Background="{Binding Path=(local:HeaderHelper.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                DockPanel.Dock="Top"
                                FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                FontFamily="{Binding Path=(local:HeaderHelper.FontFamily), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                FontSize="{Binding Path=(local:HeaderHelper.FontSize), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{Binding Path=(local:HeaderHelper.FontWeight), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Foreground="{Binding Path=(local:HeaderHelper.Foreground), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ExpanderDownHeaderStyle}" />
                            <local:Transition
                                x:Name="Transition"
                                IsShow="{TemplateBinding IsExpanded}"
                                Type="CollapseUp">
                                <ContentPresenter
                                    x:Name="ExpandSite"
                                    Margin="{TemplateBinding Padding}"
                                    Focusable="false" />
                            </local:Transition>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandSite"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandSite"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            <Setter TargetName="Transition" Property="Type" Value="CollapseLeft" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            <Setter TargetName="Transition" Property="Type" Value="CollapseLeft" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="{DynamicResource UnenableOpcity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>